PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
.mode columns
.headers on

-----------------------

DROP TABLE IF EXISTS Distrito;
DROP TABLE IF EXISTS Concelho;
DROP TABLE IF EXISTS Escola;
DROP TABLE IF EXISTS Aluno;
DROP TABLE IF EXISTS OndeRealiza;
DROP TABLE IF EXISTS DisciplinaExame;
DROP TABLE IF EXISTS Exame;
DROP TABLE IF EXISTS AlunoRealiza;
DROP TABLE IF EXISTS SitFreq;
DROP TABLE IF EXISTS Curso;
DROP TABLE IF EXISTS SubTipoCurso;
DROP TABLE IF EXISTS TipoCurso;


------------------------


CREATE TABLE Distrito(
	codDistrito int PRIMARY KEY
			 CONSTRAINT check_codDistrito CHECK ((codDistrito > 0) AND (codDistrito <= 19 OR codDistrito = 22 OR codDistrito = 99)),
	nome varchar(20) CONSTRAINT nome_distrito_unique UNIQUE 
			 CONSTRAINT notnull_nome_distrito NOT NULL
);

CREATE TABLE Concelho(
	idConcelho int PRIMARY KEY,
	codConcelho int  CONSTRAINT notnull_codConcelho NOT NULL
      			 CONSTRAINT check_codConcelho CHECK (CASE WHEN codDistrito = 99 THEN codConcelho = 99 WHEN codDistrito <> 99 THEN codConcelho <> 99 END),
	nome varchar(30) CONSTRAINT nome_concelho_unique UNIQUE 
			 CONSTRAINT notnull_nome_concelho NOT NULL,
	codNUTS3 char(3),
	codDistrito int  CONSTRAINT notnull_codDistrito NOT NULL 
			 CONSTRAINT foreignkey_codDistrito REFERENCES Distrito(codDistrito) ON DELETE RESTRICT
											    ON UPDATE CASCADE
);

CREATE TABLE Escola(
	idEscola int PRIMARY KEY,
	nome varchar(100) CONSTRAINT notnull_nome_escola NOT NULL,
	codDGAE int       CONSTRAINT codDGAE_unique UNIQUE 
		          CONSTRAINT notnull_codDGAE NOT NULL,
	codDGEEC int      CONSTRAINT codDGEEC_unique UNIQUE 
		          CONSTRAINT notnull_codDGEEC NOT NULL,
	tipo char(7)      CONSTRAINT notnull_tipo_escola NOT NULL
		          CONSTRAINT check_tipo_escola CHECK(tipo = 'PÚBLICO' OR tipo = 'PRIVADO'),
	idConcelho int    CONSTRAINT notnull_idConcelho NOT NULL
			  CONSTRAINT foreignkey_idConcelho REFERENCES Concelho(idConcelho) ON DELETE RESTRICT
										           ON UPDATE CASCADE	    
);

CREATE TABLE TipoCurso(
	codTipoCurso char(1) PRIMARY KEY
			  CONSTRAINT check_codTipoCurso CHECK (codTipoCurso IN ('C',
										'E',
										'N',
										'P',
										'Q',
										'R',
										'T',
										'U',
										'V',
										'W')),
	nome varchar(100) CONSTRAINT notnull_nome NOT NULL 
			  CONSTRAINT nome_unique UNIQUE,
	anoEscInicio int  CONSTRAINT notnull_anoEscInicio NOT NULL,
	anoEscFinal int   CONSTRAINT notnull_anoEscFinal NOT NULL,
			  CONSTRAINT anoEscFinal_maior_anoEscInicio CHECK (anoEscFinal >= anoEscInicio)
			  CONSTRAINT check_anoEscInicio CHECK (anoEscInicio >= 10 AND anoEscInicio <=12)
			  CONSTRAINT check_anoEscFinal CHECK (anoEscFinal >= 10 AND anoEscFinal <=12)
);

CREATE TABLE SubTipoCurso(
	codSubTipoCurso char(3) PRIMARY KEY,
	nome varchar(100) CONSTRAINT nomeSubTipoCurso_unique UNIQUE
			  CONSTRAINT notnull_nome_subTipoCurso NOT NULL,
	codTipoCurso 	  CONSTRAINT notnull_codTipoCurso NOT NULL
			  CONSTRAINT foreignkey_codTipoCurso REFERENCES TipoCurso(codTipoCurso) ON DELETE CASCADE 
												ON UPDATE CASCADE,
			  CONSTRAINT check_codSubTipoCurso CHECK(substr(codSubTipoCurso,1,1) = codTipoCurso)
);

CREATE TABLE Curso(
	codCurso char(3) PRIMARY KEY,
	nome varchar(50)    /*CONSTRAINT nome_curso_unique UNIQUE*/
			    CONSTRAINT notnull_nome_curso NOT NULL,
	codSubTipoCurso int CONSTRAINT notnull_codSubTipoCurso NOT NULL
			    CONSTRAINT foreignkey_codSubTipoCurso REFERENCES SubTipoCurso(codSubTipoCurso) ON DELETE CASCADE
													   ON UPDATE CASCADE
);

CREATE TABLE Aluno(
	idAluno int PRIMARY KEY,
	nome varchar(100)  CONSTRAINT notnull_nome_aluno NOT NULL,
	sexo char(1)       DEFAULT '?'
			   CONSTRAINT notnull_sexo NOT NULL 
		           CONSTRAINT check_sexo CHECK(sexo = 'M' OR 
						      sexo = 'F'),
	dataNasc date      CONSTRAINT notnull_dataNasc NOT NULL,
	anoEscolaridade int,
	codCurso char(3) /* CONSTRAINT notnull_codCurso NOT NULL */ CONSTRAINT foreignkey_codCurso REFERENCES Curso(codCurso) ON DELETE CASCADE
							   				      				      ON UPDATE CASCADE
);

CREATE TABLE Exame(
	idExame int PRIMARY KEY,
	
	fase int                CONSTRAINT notnull_fase NOT NULL
				CONSTRAINT check_fase CHECK (fase = 1 OR 
							     fase = 2),
	anoLetivo char(9)    	CONSTRAINT notnull_anoLetivo NOT NULL
				CONSTRAINT check_anoLetivo CHECK (CAST (SUBSTR(anoLetivo,6,4) AS INT) = CAST(SUBSTR(anoLetivo,1,4) AS INT) + 1 AND SUBSTR(anoLetivo,5,1) = '/') ,
	dataRealizacao date     CONSTRAINT notnull_dataRealizacao NOT NULL
				CONSTRAINT check_year CHECK(strftime('%Y', dataRealizacao) = SUBSTR(anoLetivo,6,4)),
	codExame char(3)	CONSTRAINT notnull_codExame NOT NULL
				CONSTRAINT foreignkey_codExame REFERENCES DisciplinaExame(codExame) ON DELETE CASCADE
												    ON UPDATE CASCADE
	                        
);

CREATE TABLE DisciplinaExame(
	codExame char(3) PRIMARY KEY,      
	disciplina varchar(30)  CONSTRAINT notnull_disciplina NOT NULL,
	anoEscolaridade int     CONSTRAINT notnull_anoEscolaridade NOT NULL
			        CONSTRAINT check_anoEscolaridade CHECK(anoEscolaridade = 11 OR 
								       anoEscolaridade = 12) 
	
);

CREATE TABLE OndeRealiza(
	idEscola int 		CONSTRAINT notnull_idEscola NOT NULL
		     		CONSTRAINT foreignkey_idAluno REFERENCES Aluno(idAluno)    ON DELETE CASCADE
									        	   ON UPDATE CASCADE,
	idAluno int PRIMARY KEY CONSTRAINT foreignkey_idEscola REFERENCES Escola(idEscola) ON DELETE CASCADE
											   ON UPDATE CASCADE

);

CREATE TABLE AlunoRealiza(
	idAluno int 	      CONSTRAINT foreignkey_idAluno REFERENCES Aluno(idAluno) ON DELETE CASCADE
										      ON UPDATE CASCADE,
	idExame int 	      CONSTRAINT foreignkey_idExame REFERENCES Exame(idExame) ON DELETE CASCADE
										      ON UPDATE CASCADE,
	idSitFreq varchar(20) CONSTRAINT check_idSitFreq CHECK (idSitFreq IN ('Admitido a exame',
								    	      'Anulou a matrícula',
									      'Excluído por faltas',
									      'Reprovou frequência')),
	serInterno char(1)    CONSTRAINT notnull_serInterno NOT NULL
			      CONSTRAINT check_serInterno CHECK (serInterno = 'S' OR 
							         serInterno = 'N'),
	classInt int	      DEFAULT '0'
			      CONSTRAINT check_classInt CHECK (classInt >= 0 AND classInt <= 20),
	notaExame real        DEFAULT '0.0'
			      CONSTRAINT notnull_notaExame NOT NULL
			      CONSTRAINT check_notaExame CHECK (notaExame >= 0.0 AND notaExame <= 20.0),
	classFinal int        CONSTRAINT notnull_classFinal NOT NULL,
	paraAprov char(1)     CONSTRAINT notnull_paraAprov NOT NULL
			      CONSTRAINT check_paraAprov CHECK (paraAprov = 'S' OR 
							        paraAprov = 'N'),
	paraMelhoria char(1)  CONSTRAINT notnull_paraMelhoria NOT NULL
			      CONSTRAINT check_paraMelhoria CHECK (paraMelhoria = 'S' OR 
							           paraMelhoria = 'N'),
	provaIngresso char(1) CONSTRAINT notnull_provaIngresso NOT NULL
			      CONSTRAINT check_provaIngresso CHECK (provaIngresso = 'S' OR 
							            provaIngresso = 'N'),
	CFCEPE char(1)        CONSTRAINT notnull_CFCEPE NOT NULL
			      CONSTRAINT check_CFCEPE CHECK (CFCEPE = 'S' OR 
							     CFCEPE = 'N'),

  	
	CONSTRAINT check_classFinal CHECK(CASE WHEN classInt IS NULL THEN CAST(notaExame+0.5 AS INT) WHEN classInt <> 0 THEN classFinal = CAST((CAST(classInt AS REAL)*0.7 + notaExame*0.3) AS INT) END) ,
	CONSTRAINT check_aluno_aprovado CHECK(CASE WHEN classInt >= 14 THEN  paraAprov = 'N' END),
	CONSTRAINT check_aluno_nao_aprovado CHECK(CASE WHEN classInt < 14 THEN paraAprov='S'  END), 
	PRIMARY KEY(idAluno, idExame)
);


COMMIT;
